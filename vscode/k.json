[
  {
    "key": "escape",
    "command": "notifications.hideToasts",
    "when": "notificationToastsVisible",
  },
  {
    "key": "escape",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible"
  },
  {
    "key": "escape",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "auxiliaryBarFocus || panelFocus || sideBarFocus",
  },
  {
    "key": "escape",
    "command": "list.closeFind",
    "when": "listFocus && treeFindOpen"
  },
  {
    "key": "escape",
    "command": "notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus",
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus",
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus",
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus",
  },
  {
    "key": "shift+down",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "shift+up",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "shift+down",
    "command": "search.focus.nextInputBox",
    "when": "!editorTextFocus && inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "shift+up",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus",
  },
  {
    "key": "shift+up",
    "command": "search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+down",
    "command": "-search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "ctrl+up",
    "command": "-search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "m f",
    "command": "workbench.action.quickOpen",
    "args": "",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  { 
    "key": "m l",
    "command": "workbench.action.findInFiles",
    "args": {
      "query": "",
      "isRegex": true,
      "filesToInclude": "${fileDirname}/**",
      "filesToExclude": "*.exe,*.zip,*.msi,*.appimage,*.meta",
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m w",
    "command": "workbench.action.findInFiles",
    "args": {
      "isRegex": true,
      "filesToInclude": "${fileDirname}/**",
      "filesToExclude": "*.exe,*.zip,*.msi,*.appimage,*.meta",
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m r f",
    "command": "workbench.action.quickOpen",
    "args": "",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m r l",
    "command": "workbench.action.findInFiles",
    "args": {
      "query": "",
      "isRegex": true,
      "filesToInclude": "",
      "filesToExclude": "*.exe,*.zip,*.msi,*.appimage,*.meta",
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m r w",
    "command": "workbench.action.findInFiles",
    "args": {
      "isRegex": true,
      "filesToInclude": "",
      "filesToExclude": "*.exe,*.zip,*.msi,*.appimage,*.meta",
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m p l",
    "command": "workbench.action.findInFiles",
    "args": {
      "query": "",
      "isRegex": true,
      "filesToInclude": "${fileDirname}/**",
      "filesToExclude": "*.exe,*.zip,*.msi,*.appimage,*.meta",
      "replace": "",
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m p w",
    "command": "workbench.action.findInFiles",
    "args": {
      "isRegex": true,
      "filesToInclude": "${fileDirname}/**",
      "filesToExclude": "*.exe,*.zip,*.msi,*.appimage,*.meta",
      "replace": "",
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m p r l",
    "command": "workbench.action.findInFiles",
    "args": {
      "query": "",
      "isRegex": true,
      "filesToInclude": "",
      "filesToExclude": "*.exe,*.zip,*.msi,*.appimage,*.meta",
      "replace": "",
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m p r w",
    "command": "workbench.action.findInFiles",
    "args": {
      "isRegex": true,
      "filesToInclude": "",
      "filesToExclude": "*.exe,*.zip,*.msi,*.appimage,*.meta",
      "replace": "",
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m s s",
    "command": "workbench.action.gotoSymbol",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "m r s s",
    "command": "workbench.action.showAllSymbols",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c c",
    "command": "references-view.showCallHierarchy",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": "ctrl+c",
    "command": "references-view.showOutgoingCalls",
    "when": "focusedView == references-view.tree && !treeFindOpen && reference-list.source == callHierarchy && references-view.callHierarchyMode == showIncoming",
  },
  {
    "key": "ctrl+c",
    "command": "references-view.showIncomingCalls",
    "when": "focusedView == references-view.tree && !treeFindOpen && reference-list.source == callHierarchy && references-view.callHierarchyMode == showOutgoing",
  },
  {
    "key": ", n",
    "command": "workbench.action.focusLeftGroup",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", o",
    "command": "workbench.action.focusRightGroup",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", r",
    "command": "workbench.action.focusAboveGroup",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", i",
    "command": "workbench.action.focusBelowGroup",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", l h",
    "command": "workbench.action.splitEditorDown",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", l v",
    "command": "workbench.action.splitEditorRight",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", l c",
    "command": "workbench.action.reloadWindow",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", l r",
    "command": "workbench.action.reloadWindow",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", q q",
    "command": "workbench.action.closeEditorsAndGroup",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", q o",
    "command": "workbench.action.editorLayoutSingle",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", q t",
    "command": "workbench.action.editorLayoutSingle",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", q a",
    "command": "workbench.action.closeWindow",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s n",
    "command": "workbench.action.decreaseViewWidth",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s o",
    "command": "workbench.action.increaseViewWidth",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s i",
    "command": "workbench.action.decreaseViewHeight",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s r",
    "command": "workbench.action.increaseViewHeight",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s m",
    "commands": [
      "workbench.action.closeSidebar",
      "workbench.action.closeAuxiliaryBar",
      "workbench.action.closePanel",
    ],
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s z",
    "command": "workbench.action.toggleZenMode",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s .",
    "command": "workbench.action.quickOpen",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s u",
    "command": "workbench.action.zoomIn",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s d",
    "command": "workbench.action.zoomOut",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", m n",
    "command": "workbench.action.moveActiveEditorGroupLeft",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", m o",
    "command": "workbench.action.moveActiveEditorGroupRight",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", m i",
    "command": "workbench.action.moveActiveEditorGroupDown",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", m r",
    "command": "workbench.action.moveActiveEditorGroupUp",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c c",
    "command": "editor.action.openLink",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c a",
    "command": "editor.action.quickFix",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c r",
    "command": "editor.action.rename",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c m",
    "command": "go.godoctor.extract",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c f",
    "command": "editor.action.formatDocument",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c v",
    "command": "go.godoctor.var",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c p",
    "command": "workbench.action.files.copyPathOfActiveFile",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c l",
    "command": "todo", // copyFileAndLine
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", c P",
    "command": "copyRelativeFilePath",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d d",
    "command": "workbench.action.debug.restart",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d shift+g",
    "command": "workbench.action.debug.selectandstart",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d q",
    "command": "workbench.action.debug.stop",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d g",
    "command": "workbench.action.debug.continue",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d c",
    "command": "editor.debug.action.runToCursor",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d f",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": ", d f",
    "command": "editor.debug.action.stepIntoTarget",
    "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'",
  },
  {
    "key": ", d l",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d w",
    "command": "editor.debug.action.selectionToWatch",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d shift+w",
    "command": "workbench.debug.viewlet.action.removeAllWatchExpressions",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d t",
    "command": "workbench.action.debug.stepOver",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", d shift+t",
    "command": "workbench.action.debug.stepOut",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", w .",
    "command": "workbench.action.quickOpenView",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", w e",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", w g",
    "command": "gitlens.openFileHistory",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", w t",
    "command": "workbench.action.terminal.focus",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", w s",
    "command": "outline.focus",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", w p",
    "command": "workbench.action.problems.focus",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", w d",
    "command": "debug.openView",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", w m",
    "command": "bookmarksExplorer.focus",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", left",
    "command": "workbench.action.focusSideBar",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", right",
    "command": "workbench.action.focusAuxiliaryBar",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", down",
    "command": "workbench.action.focusPanel",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", q left",
    "command": "workbench.action.closeSidebar",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", q right",
    "command": "workbench.action.closeAuxiliaryBar",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", q down",
    "command": "workbench.action.closePanel",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", s m",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.closeSidebar",
        "workbench.action.closeAuxiliaryBar",
        "workbench.action.closePanel",
      ],
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", l w",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.splitEditorRight",
        "workbench.action.files.newUntitledFile"
      ],
    },
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  {
    "key": ", l .",
    "command": "workbench.action.showCommands",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal' || vim.mode == 'Visual'",
  },
  // { TODO: vim has [bug gotoreference](https://github.com/VSCodeVim/Vim/issues/8538) in windows
  //   "key": "enter",
  //   "command": "runCommands",
  //   "args": {
  //     "commands": [
  //       "openReference"
  //     ]
  //   },
  //   "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
  // },
  {
    "key": ", v",
    "command": "..extension.vim_ctrl+v",
    "when": "editorTextFocus && vim.active && vim.mode == 'Normal'",
  },
  {
    // TODO: when no install matchit extension, keybindmust nouse, or let matchit can use as browser plugin
    "key": "%",
    "command": "extension.matchitJumpItems",
    "when": "editorTextFocus",
  },
  {
    "key": "ctrl+u",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "alt+.",
    "command": "workbench.action.showCommands"
  },
]
